-- bootstrap lazy.nvim
local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim"
if not vim.loop.fs_stat(lazypath) then
  vim.fn.system({
    "git", "clone", "--filter=blob:none",
    "https://github.com/folke/lazy.nvim.git",
    "--branch=stable", lazypath,
  })
end
vim.opt.rtp:prepend(lazypath)

-- –ø–ª–∞–≥–∏–Ω—ã
require("lazy").setup({
      -- Telescope –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
    { 
        "nvim-telescope/telescope.nvim", 
        dependencies = { "nvim-lua/plenary.nvim" } 
    },
    
    {
      "nvim-neo-tree/neo-tree.nvim",
      branch = "v3.x",
      dependencies = {
        "nvim-lua/plenary.nvim",
        "nvim-tree/nvim-web-devicons", -- –∏–∫–æ–Ω–∫–∏
        "MunifTanjim/nui.nvim",
      },
      config = function()
        require("neo-tree").setup({
          window = {
            position = "float", -- üëà –æ—Ç–∫—Ä—ã–≤–∞–µ–º –¥–µ—Ä–µ–≤–æ –ø–æ —Ü–µ–Ω—Ç—Ä—É —ç–∫—Ä–∞–Ω–∞
            width = 50,
            height = 20,
          },
          follow_current_file = {
              enabled = true,   -- üëà —Å–ª–µ–¥–∏–º –∑–∞ —Ç–µ–∫—É—â–∏–º —Ñ–∞–π–ª–æ–º
              leave_dirs_open = false, -- –∑–∞–∫—Ä—ã–≤–∞—Ç—å –Ω–µ—Å–≤—è–∑–∞–Ω–Ω—ã–µ –ø–∞–ø–∫–∏
          },
          filesystem = {
            filtered_items = { 
                hide_dotfiles = false, -- –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–∫—Ä—ã—Ç—ã–µ —Ñ–∞–π–ª—ã
                hide_gitignored = true,
            },
          },
        })

      end
    },
    -- LSP + Mason + Autocomplete
    {
      "williamboman/mason.nvim",
      config = true
    },
    {
      "williamboman/mason-lspconfig.nvim",
      dependencies = { "neovim/nvim-lspconfig" },
      config = function()
        require("mason").setup()
        require("mason-lspconfig").setup({
          ensure_installed = { 
              "ts_ls", 
              "angularls",
              "dockerls",                     -- Dockerfile
              "docker_compose_language_service", -- docker-compose.yml
          },
        })

        local lspconfig = require("lspconfig")

        -- –û–±—â–∏–µ keymaps –¥–ª—è LSP
        local on_attach = function(_, bufnr)
          local opts = { noremap = true, silent = true, buffer = bufnr }

          -- –î–µ–≤–∏–Ω–∏—à–µ–Ω—ã
          vim.keymap.set("n", "gd", vim.lsp.buf.definition, opts)
          vim.keymap.set("n", "gr", vim.lsp.buf.references, opts)

          -- –ò–Ω—Ñ–∞
          vim.keymap.set("n", "K", vim.lsp.buf.hover, opts)

          -- –≠–∫—à–µ–Ω—ã
          vim.keymap.set("n", "<leader>rn", vim.lsp.buf.rename, opts)
          vim.keymap.set("n", "<leader>ca", vim.lsp.buf.code_action, opts)
          
          -- –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
          vim.keymap.set("n", "[d", vim.diagnostic.goto_prev, opts)
          vim.keymap.set("n", "]d", vim.diagnostic.goto_next, opts)
          vim.keymap.set("n", "<leader>d", vim.diagnostic.open_float, opts)
        end

        -- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ TypeScript/JavaScript (tsserver)
        lspconfig.ts_ls.setup({
          on_attach = on_attach,
          capabilities = require("cmp_nvim_lsp").default_capabilities(),
        })

        -- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Angular
        lspconfig.angularls.setup({
          on_attach = on_attach,
          capabilities = require("cmp_nvim_lsp").default_capabilities(),
        })
      end
    },
    {
      "hrsh7th/nvim-cmp",
      dependencies = {
        "hrsh7th/cmp-nvim-lsp",
        "hrsh7th/cmp-buffer",
        "hrsh7th/cmp-path",
        "L3MON4D3/LuaSnip"
      },
      config = function()
        local cmp = require("cmp")
        cmp.setup({
          mapping = {
            ["<C-Space>"] = cmp.mapping.complete(),
            ["<CR>"] = cmp.mapping.confirm({ select = true }),
            ["<C-n>"] = cmp.mapping.select_next_item(),
            ["<C-p>"] = cmp.mapping.select_prev_item(),
          },
          sources = {
            { name = "nvim_lsp" },
            { name = "buffer" },
            { name = "path" },
          },
          snippet = {
            expand = function(args)
              require("luasnip").lsp_expand(args.body)
            end,
          },
        })
      end
    }

})

require("telescope").setup({
  pickers = {
    buffers = {
      sort_mru = true,      -- —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
      mappings = {
--        i = {
--         ["<C-D>"] = "delete_buffer", -- —É–¥–∞–ª–∏—Ç—å –±—É—Ñ–µ—Ä –≤ insert mode
--      },
        n = {
          ["D"] = "delete_buffer",     -- —É–¥–∞–ª–∏—Ç—å –±—É—Ñ–µ—Ä –≤ normal mode
        },
      },
    },
  },
})


-- –ø—Ä–æ–±–µ–ª –∫–∞–∫ leader
vim.g.mapleader = " "

-- –±–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
vim.opt.number = true
vim.opt.relativenumber = true
vim.opt.tabstop = 4 
vim.opt.shiftwidth = 4
vim.opt.expandtab = true
vim.opt.smartindent = true
vim.opt.mouse = "a"
vim.opt.clipboard = "unnamedplus"

-- Telescope keymap
vim.api.nvim_set_keymap('n', '<leader>ff', ':Telescope find_files<CR>', { noremap = true, silent = true })
vim.api.nvim_set_keymap('n', '<leader>fg', ':Telescope live_grep<CR>', { noremap = true, silent = true })
vim.api.nvim_set_keymap("n", "<leader>bb", ":Telescope buffers<CR>", { noremap = true, silent = true })

-- –î–µ—Ä–µ–≤–æ —Ñ–∞–π–ª–æ–≤
vim.api.nvim_set_keymap('n', '<leader>e', ':Neotree reveal toggle<CR>', { silent = true })
-- –º–∞–ø—ã –≤–Ω—É—Ç—Ä–∏ –¥–µ—Ä–µ–≤–∞ (–≤ normal mode)
-- a ‚Üí —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª/–ø–∞–ø–∫—É
-- d ‚Üí —É–¥–∞–ª–∏—Ç—å
-- r ‚Üí –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å
-- <CR> ‚Üí –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –≤ —Ç–µ–∫—É—â–µ–º –æ–∫–Ω–µ

-- –°–±—Ä–æ—Å –ø–æ–∏—Å–∫–∞
vim.api.nvim_set_keymap('n', '<leader>h', ':nohl<CR>', { silent = true })
